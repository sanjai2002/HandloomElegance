create database handloomelegance;
use handloomelegance;

CREATE TABLE Users (
    user_id char(36) PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    phone_number VARCHAR(20),
    Role VARCHAR(10),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
ALTER TABLE Users
RENAME COLUMN password_hash to Password;

Alter table Users Add isActive tinyint(1);
Alter table Users Add Lastlogin DATETIME ;

CREATE TABLE Address (
    address_id char(36)  PRIMARY KEY,
    user_id char(36),
    street_address VARCHAR(255) NOT NULL,
    city VARCHAR(100) NOT NULL,
    state VARCHAR(100) NOT NULL,
    postal_code VARCHAR(20) NOT NULL,
    country VARCHAR(100) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

Alter table Address Add isActive tinyint(1) ;
Alter table Address Add CreatedAt DATETIME  ;
Alter table Address Add ModifiedAt DATETIME  ;

CREATE TABLE Categories (
    category_id CHAR(36) PRIMARY KEY,
    category_name VARCHAR(50) UNIQUE NOT NULL,
    description TEXT
);
Alter table Categories Add isActive tinyint(1) ;
Alter table Categories Add CreatedAt DATETIME  ;
Alter table Categories Add ModifiedAt DATETIME  ;

CREATE TABLE Products (
    product_id char(36)  PRIMARY KEY,
    Productname VARCHAR(100) NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT NOT NULL,
    category_id CHAR(36),
    image_url blob,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES Categories(category_id)
);
ALTER TABLE Products
MODIFY COLUMN image_url varchar();

Alter table Products Add isActive tinyint(1) ;

CREATE TABLE Orders (
    order_id char(36) PRIMARY KEY,
    user_id char(36),
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status ENUM('Pending', 'Processing', 'Shipped', 'Delivered', 'Cancelled') NOT NULL,
    total_amount DECIMAL(10, 2) NOT NULL,
    address_id char(36),
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (address_id) REFERENCES Address(address_id)
);
Alter table Orders Add isActive tinyint(1) ;

CREATE TABLE Order_Items (
    order_item_id char(36)  PRIMARY KEY,
    order_id char(36),
    product_id char(36),
    quantity INT NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES Orders(order_id),
    FOREIGN KEY (product_id) REFERENCES Products(product_id)
);

CREATE TABLE Reviews (
    review_id char(36) PRIMARY KEY,
    product_id char(36),
    user_id char(36),
    rating TINYINT NOT NULL CHECK (rating BETWEEN 1 AND 5),
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES Products(product_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

CREATE TABLE Payments (
    payment_id char(36) PRIMARY KEY,
    order_id char(36),
	user_id char(36),
    amount DECIMAL(10, 2) NOT NULL,
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    payment_method ENUM('Credit Card', 'PayPal', 'Bank Transfer') NOT NULL,
    transaction_id VARCHAR(100),
    FOREIGN KEY (order_id) REFERENCES Orders(order_id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

CREATE TABLE Shopping_Cart (
    cart_id  char(36) PRIMARY KEY,
    user_id char(36),
    product_id char(36),
    quantity INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (product_id) REFERENCES Products(product_id)
);
Alter table Shopping_Cart Add isActive tinyint(1) ;
Alter table Shopping_Cart Add CreatedAt DATETIME  ;
Alter table Shopping_Cart Add ModifiedAt DATETIME  ;